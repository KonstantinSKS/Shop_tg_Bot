from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

from tg_bot.misc import constants as const
from .pagination import paginate_items

from math import ceil

BUTTON_BACK_MAIN_MENU = InlineKeyboardButton(
    text="–í –≥–ª–∞–≤–Ω–æ–µ –ú–µ–Ω—é üìã", callback_data="back_main_menu"
)
BUTTONS_BACK_STEP = InlineKeyboardButton(
    text="–ù–∞–∑–∞–¥ ‚Ü©Ô∏è", callback_data="back_step"
)


def main_menu():
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""

    keyboard = InlineKeyboardBuilder()
    keyboard.row(
        InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥", callback_data="catalog")
    )
    keyboard.row(
        InlineKeyboardButton(text="–ö–æ—Ä–∑–∏–Ω–∞ üõí", callback_data="shopping_cart")
    )
    keyboard.row(
        InlineKeyboardButton(text="FAQ", callback_data="faq")
    )
    return keyboard.as_markup()


def back_main_menu():
    """–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""

    keyboard = InlineKeyboardBuilder()
    keyboard.add(BUTTON_BACK_MAIN_MENU)
    return keyboard.as_markup()


def back_step():
    """–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ —à–∞–≥ –Ω–∞–∑–∞–¥ –∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""

    keyboard = builder_back_step_and_main_menu()
    return keyboard.as_markup()


def builder_back_step_and_main_menu():
    """Builder –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ù–∞–∑–∞–¥ –∏ –ú–µ–Ω—é."""

    keyboard = InlineKeyboardBuilder()
    keyboard.add(BUTTONS_BACK_STEP)
    keyboard.add(BUTTON_BACK_MAIN_MENU)
    return keyboard.adjust(1)


def channels_kb(channel_url: str):
    """–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª."""

    keyboard = InlineKeyboardBuilder()
    keyboard.row(
        InlineKeyboardButton(text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è üîî", url=channel_url)
    )
    keyboard.row(
        InlineKeyboardButton(text="–ü–æ–¥–ø–∏—Å–∞–ª—Å—è", callback_data="sub_channel_done")
    )
    return keyboard.as_markup()


def categories_kb(categories, page=1):
    """–°–æ–∑–¥–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π."""

    builder = InlineKeyboardBuilder()
    paginated_categories, pagination_buttons = paginate_items(
        categories, page, const.PAGINATION_ITEMS, "categories")

    for category in paginated_categories:
        builder.button(
            text=category.title,
            callback_data=f"category_{category.id}"
        )

    if pagination_buttons:
        builder.row(*pagination_buttons)

    builder.add(BUTTON_BACK_MAIN_MENU)
    return builder.as_markup()


def subcategories_kb(subcategories, category_id, page=1):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –∏ –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è."""

    builder = InlineKeyboardBuilder()
    paginated_subcategories, pagination_buttons = paginate_items(
        subcategories, page, const.PAGINATION_ITEMS, f"category_{category_id}")

    for subcategory in paginated_subcategories:
        builder.button(
            text=subcategory.title,
            callback_data=f"subcategory_{subcategory.id}"
        )

    if pagination_buttons:
        builder.row(*pagination_buttons)

    builder.row(BUTTONS_BACK_STEP, BUTTON_BACK_MAIN_MENU)
    return builder.as_markup()

def product_kb(products, products_id, page=1):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ç–æ–≤–∞—Ä–∞–º–∏ –∏ –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è."""

    builder = InlineKeyboardBuilder()
    paginated_products, pagination_buttons = paginate_items(
        products, page, const.PAGINATION_ITEMS, f"products_{products_id}")

    for subcategory in paginated_products:
        builder.button(
            text=subcategory.title,
            callback_data=f"subcategory_{subcategory.id}"
        )

    if pagination_buttons:
        builder.row(*pagination_buttons)

    builder.row(BUTTONS_BACK_STEP, BUTTON_BACK_MAIN_MENU)
    return builder.as_markup()
